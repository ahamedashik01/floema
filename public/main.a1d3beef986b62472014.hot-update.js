/*! For license information please see main.a1d3beef986b62472014.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/animations/Paragraph.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/lodash/each.js"),a=s.n(n),l=s("./app/classes/Animation.js"),o=s("./app/utils/text.js");class r extends l.default{constructor({element:e,elements:t}){super({element:e,elements:t}),this.elementLinesSpans=(0,o.split)({append:!0,element:this.element})}animateIn(){this.timelineIn=i.default.timeline({delay:.5}),i.default.set(this.element,{autoAlpha:1}),a()(this.elementLines,((e,t)=>{this.timelineIn.fromTo(e,{y:"100%"},{delay:.1*t,duration:1.5,ease:"expo.out",y:"0%"},0)}))}animateOut(){i.default.set(this.element,{autoAlpha:0})}onResize(){this.elementLines=(0,o.calculate)(this.elementLinesSpans)}}},"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>p});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/normalize-wheel/index.js"),a=s.n(n),l=s("./node_modules/prefix/index.js"),o=s.n(l),r=s("./node_modules/lodash/each.js"),h=s.n(r),m=s("./node_modules/lodash/map.js"),d=s.n(m),u=s("./app/animations/Paragraph.js"),c=s("./app/animations/Title.js");Object(function(){var e=new Error("Cannot find module 'animations/Lable'");throw e.code="MODULE_NOT_FOUND",e}());class p{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,animatioinsTitles:'[data-animation="title"]',animatioinsParagraphs:'[data-animation="paragraph"]',animatioinsLabels:'[data-animation="label"]'},this.id=s,this.transformPrefix=o()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},h()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations()}createAnimations(){this.animations=[],this.animatioinsTitles=d()(this.elements.animatioinsTitles,(e=>new c.default({element:e}))),this.animations.push(...this.animatioinsTitles),this.animatioinsParagraphs=d()(this.elements.animatioinsParagraphs,(e=>new u.default({element:e}))),this.animations.push(...this.animatioinsParagraphs),this.animatioinsLabels=d()(this.elements.animatioinsLabels,(e=>new Object(function(){var e=new Error("Cannot find module 'animations/Lable'");throw e.code="MODULE_NOT_FOUND",e}())({element:e}))),this.animations.push(...this.animatioinsLabels)}show(){return new Promise((e=>{this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((()=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{pixelY:t}=a()(e);this.scroll.target+=t}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),h()(this.animatioinsTitles,(e=>e.onResize()))}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"97caba894cb43016e19b"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,